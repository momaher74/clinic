╔══════════════════════════════════════════════════════════════════════╗
║         DYNAMIC WEEKLY SCHEDULE MODULE - INSTALLATION GUIDE          ║
╚══════════════════════════════════════════════════════════════════════╝

QUICK START CHECKLIST
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

□ Step 1: Install Spatie Laravel Permission
   └─ Run: composer require spatie/laravel-permission
   └─ Run: php artisan vendor:publish --provider="Spatie\Permission\PermissionServiceProvider"
   └─ Run: php artisan migrate

□ Step 2: Copy Files to Your Laravel Project

   MODELS (app/Models/)
   ├─ Schedule.php
   └─ ScheduleSetting.php

   MIGRATIONS (database/migrations/)
   ├─ 2025_01_01_000001_create_schedules_table.php
   └─ 2025_01_01_000002_create_schedule_settings_table.php

   CONTROLLERS (app/Http/Controllers/)
   └─ ScheduleController.php

   VIEWS (resources/views/schedules/)
   └─ index.blade.php

   SEEDERS (database/seeders/)
   └─ SchedulePermissionSeeder.php

□ Step 3: Add Routes to routes/web.php
   └─ Copy the route definitions from routes/web.php

□ Step 4: Run Migrations
   └─ Run: php artisan migrate

□ Step 5: Seed Permissions
   └─ Run: php artisan db:seed --class=SchedulePermissionSeeder

□ Step 6: Assign Permission to Your Admin User
   └─ In Tinker or your seeder:
      $user = User::find(1);
      $user->givePermissionTo('manage schedules');

□ Step 7: Ensure Bootstrap 5 and Font Awesome in Layout
   └─ Check layouts/app.blade.php has Bootstrap 5 CSS/JS
   └─ Check layouts/app.blade.php has Font Awesome
   └─ Check layouts/app.blade.php has CSRF meta tag
   └─ Check layouts/app.blade.php has @stack('styles') and @stack('scripts')

□ Step 8: Visit /schedules
   └─ Configure your schedule settings
   └─ Click "Generate Time Slots"
   └─ Start managing your weekly schedule!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

FEATURES INCLUDED
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✓ Dynamic time slot generation
✓ 7-day weekly grid view
✓ Color-coded status system (Available, Pending, Booked)
✓ Quantity management per slot
✓ AJAX status toggling
✓ Spatie permission integration
✓ Responsive Bootstrap 5 UI
✓ Admin configuration panel

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

DEFAULT SETTINGS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Start Time:     09:00 AM
End Time:       11:00 PM
Slot Interval:  60 minutes
Permission:     manage schedules

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

TROUBLESHOOTING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Problem: Permission denied error
Solution: Make sure you ran the SchedulePermissionSeeder and assigned
          the permission to your user.

Problem: Routes not found
Solution: Make sure you copied the routes to routes/web.php and
          cleared route cache: php artisan route:clear

Problem: Styles not loading
Solution: Ensure Bootstrap 5 and Font Awesome are included in your
          layout file (layouts/app.blade.php)

Problem: Toggle button not working
Solution: Check browser console for errors. Ensure CSRF token meta
          tag is present in your layout.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

For more details, see README.md
